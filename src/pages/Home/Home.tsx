// src/pages/Home/Home.tsx
import React, { useRef, useState } from 'react';
import { useInView } from 'framer-motion';
import { Hero } from '../../components/Hero/Hero';
import { Features } from '../../components/Features/Features';
import { AnimatedCounter } from '../../components/AnimatedCounter/AnimatedCounter';
import { InteractiveCompass } from '../../components/InteractiveCompass/InteractiveCompass';
import { AlphaBravoChallenge } from '../../components/AlphaBravoChallenge';
import {
  HomeContainer,
  CenteredSection,
  StatsSection,
  StatsContent,
  StatsGrid,
  CtaSection,
  CtaContent,
  CtaTitle,
  CtaDescription,
  CtaButton,
  InteractiveSection,
  DemoContainer,
  DemoTitle,
  DemoGrid,
  DemoCard,
  ChallengeSection,
  ChallengeContainer
} from './Home.styles';

export const Home: React.FC = () => {
  const statsRef = useRef(null);
  useInView(statsRef, { once: true });
  const [hoveredDemo, setHoveredDemo] = useState<string | null>(null);

  const handleDemoClick = (demo: string) => {
    alert(`–î–µ–º–æ-–º–æ–¥—É–ª—å "${demo}" –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –≤ –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏!`);
  };

  const handleTryNavigation = () => {
    alert('–ú–æ–¥—É–ª—å –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –∞–∫—Ç–∏–≤–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ. –û–∂–∏–¥–∞–π—Ç–µ –∑–∞–ø—É—Å–∫ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!');
  };

  return (
    <HomeContainer id="home">
      <CenteredSection>
        <Hero />
      </CenteredSection>
      
      <StatsSection ref={statsRef}>
        <StatsContent>
          <StatsGrid>
            <AnimatedCounter
              value={15}
              label="–û—Ç—Ä–∞–±–æ—Ç–∞–π—Ç–µ –Ω–∞–≤–∏–≥–∞—Ü–∏—é –Ω–∞ 15+ —Å–∏—Å—Ç–µ–º–∞—Ö"
              icon="‚úàÔ∏è"
              suffix="+"
              duration={2000}
            />
            <AnimatedCounter
              value={30}
              label="–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ 30+ —Ä–µ–∞–ª—å–Ω—ã—Ö –º–µ—Ç–µ–æ—Å–≤–æ–¥–æ–∫"
              icon="üå§Ô∏è"
              suffix="+"
              duration={2000}
            />
            <AnimatedCounter
              value={24}
              label="–î–æ—Å—Ç—É–ø –∫ —É—Ä–æ–∫–∞–º 24/7"
              icon="üïí"
              suffix="/7"
              duration={1500}
            />
            <AnimatedCounter
              value={100}
              label="–ü–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–Ω–æ–º–Ω–∞—è —Ä–∞–±–æ—Ç–∞"
              icon="üîã"
              suffix="%"
              duration={1500}
            />
          </StatsGrid>
        </StatsContent>
      </StatsSection>

      <CenteredSection>
        <Features />
      </CenteredSection>

      <InteractiveSection>
        <DemoContainer>
          <DemoTitle>–ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –¥–µ–º–æ-–º–æ–¥—É–ª–∏</DemoTitle>
          <p style={{ marginBottom: '2rem', fontSize: '1.1rem', opacity: 0.9 }}>
            –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–≥—Ä–æ–≤—ã–µ –º–æ–¥—É–ª–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –≤ –¥–µ–π—Å—Ç–≤–∏–∏
          </p>
          <DemoGrid>
            <InteractiveCompass />

            <DemoCard 
              onClick={() => handleDemoClick('VOR –°–∏–º—É–ª—è—Ç–æ—Ä')}
              onMouseEnter={() => setHoveredDemo('vor')}
              onMouseLeave={() => setHoveredDemo(null)}
              style={{
                transform: hoveredDemo === 'vor' ? 'translateY(-8px) scale(1.02)' : 'none',
                transition: 'all 0.3s ease',
                boxShadow: hoveredDemo === 'vor' ? '0 10px 30px rgba(100, 255, 218, 0.2)' : 'none'
              }}
            >
              <div style={{ fontSize: '2.5rem', marginBottom: '1rem' }}>üì°</div>
              <h4 style={{ marginBottom: '0.5rem', color: '#64ffda' }}>VOR –°–∏–º—É–ª—è—Ç–æ—Ä</h4>
              <p style={{ opacity: 0.8 }}>–û—Ç—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–±–æ—Ç—ã —Å —Ä–∞–¥–∏–æ–º–∞—è–∫–∞–º–∏</p>
            </DemoCard>
            
            <DemoCard 
              onClick={() => handleDemoClick('–ê–Ω–∞–ª–∏–∑ METAR')}
              onMouseEnter={() => setHoveredDemo('metar')}
              onMouseLeave={() => setHoveredDemo(null)}
              style={{
                transform: hoveredDemo === 'metar' ? 'translateY(-8px) scale(1.02)' : 'none',
                transition: 'all 0.3s ease',
                boxShadow: hoveredDemo === 'metar' ? '0 10px 30px rgba(100, 255, 218, 0.2)' : 'none'
              }}
            >
              <div style={{ fontSize: '2.5rem', marginBottom: '1rem' }}>üå§Ô∏è</div>
              <h4 style={{ marginBottom: '0.5rem', color: '#64ffda' }}>–ê–Ω–∞–ª–∏–∑ METAR</h4>
              <p style={{ opacity: 0.8 }}>–ß—Ç–µ–Ω–∏–µ –º–µ—Ç–µ–æ—Å–≤–æ–¥–æ–∫</p>
            </DemoCard>
          </DemoGrid>
        </DemoContainer>
      </InteractiveSection>

      {/* —Å–µ–∫—Ü–∏—è —Å –∏–≥—Ä–æ–π Alpha Bravo Challenge */}
      <ChallengeSection>
        <ChallengeContainer>
          <DemoTitle>Alpha Bravo Challenge</DemoTitle>
          <p style={{ marginBottom: '2rem', fontSize: '1.1rem', opacity: 0.9 }}>
            –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –∞–≤–∏–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ –∞–ª—Ñ–∞–≤–∏—Ç–∞ –ò–ö–ê–û –≤ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–æ–π –∏–≥—Ä–µ
          </p>
          <AlphaBravoChallenge />
        </ChallengeContainer>
      </ChallengeSection>

      <CtaSection>
        <CtaContent>
          <CtaTitle>–ì–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å –æ–±—É—á–µ–Ω–∏–µ?</CtaTitle>
          <CtaDescription>
            –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã—Ö –ø–∏–ª–æ—Ç–æ–≤ —É–∂–µ —Å–µ–≥–æ–¥–Ω—è.
            –û—Å–≤–æ–π—Ç–µ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –∏ –º–µ—Ç–µ–æ–∞–Ω–∞–ª–∏–∑–∞ –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π —Å—Ä–µ–¥–µ.
          </CtaDescription>
          <CtaButton onClick={handleTryNavigation}>
            –ù–∞—á–∞—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ
          </CtaButton>
        </CtaContent>
      </CtaSection>
    </HomeContainer>
  );
};