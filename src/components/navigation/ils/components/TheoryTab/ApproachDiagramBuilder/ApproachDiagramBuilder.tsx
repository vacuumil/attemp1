import React, { useState } from 'react';
import { 
  BuilderContainer, 
  BuilderTitle,
  InteractiveDemo,
  DemoSection,
  SectionTitle,
  ControlPanel,
  Visualization,
  PFDDisplay,
  LocalizerDisplay,
  GlideSlopeDisplay,
  WindEffect,
  Instruction,
  DeviationInfo
} from './ApproachDiagramBuilder.styles';

export const ApproachDiagramBuilder: React.FC = () => {
  const [localizerDeviation, setLocalizerDeviation] = useState(0); // -2 to 2 dots
  const [glideSlopeDeviation, setGlideSlopeDeviation] = useState(0); // -2 to 2 dots
  const [windDirection, setWindDirection] = useState(0); // degrees
  const [windSpeed, setWindSpeed] = useState(0); // knots

  // –†–∞—Å—á–µ—Ç —É–≥–ª–∞ —Å–Ω–æ—Å–∞ (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π)
  const calculateWindCorrection = () => {
    if (windSpeed === 0) return 0;
    // –£–ø—Ä–æ—â–µ–Ω–Ω—ã–π —Ä–∞—Å—á–µ—Ç: 1¬∞ —Å–Ω–æ—Å–∞ –Ω–∞ –∫–∞–∂–¥—ã–µ 10 —É–∑–ª–æ–≤ –±–æ–∫–æ–≤–æ–≥–æ –≤–µ—Ç—Ä–∞
    const crosswind = windSpeed * Math.sin(windDirection * Math.PI / 180);
    return Math.round((crosswind / 10) * 10) / 10;
  };

  const windCorrectionAngle = calculateWindCorrection();

  // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π
  const getLocalizerInstruction = (deviation: number): string => {
    if (deviation === 0) return "‚úÖ –ò–¥–µ–∞–ª—å–Ω–æ –Ω–∞ –∫—É—Ä—Å–µ";
    if (deviation > 0) return `‚û°Ô∏è –†–æ–º–±–∏–∫ —Å–ø—Ä–∞–≤–∞: —Å–∞–º–æ–ª–µ—Ç —Å–ª–µ–≤–∞ –æ—Ç –∫—É—Ä—Å–∞, –ø–æ–≤–µ—Ä–Ω–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–æ –Ω–∞ ${deviation * 1.5}¬∞`;
    return `‚¨ÖÔ∏è –†–æ–º–±–∏–∫ —Å–ª–µ–≤–∞: —Å–∞–º–æ–ª–µ—Ç —Å–ø—Ä–∞–≤–∞ –æ—Ç –∫—É—Ä—Å–∞, –ø–æ–≤–µ—Ä–Ω–∏—Ç–µ –Ω–∞–ª–µ–≤–æ –Ω–∞ ${Math.abs(deviation) * 1.5}¬∞`;
  };

  const getGlideSlopeInstruction = (deviation: number): string => {
    if (deviation === 0) return "‚úÖ –ò–¥–µ–∞–ª—å–Ω–æ –Ω–∞ –≥–ª–∏—Å—Å–∞–¥–µ";
    if (deviation > 0) return `‚¨áÔ∏è –†–æ–º–±–∏–∫ —Å–Ω–∏–∑—É: —Å–∞–º–æ–ª–µ—Ç –≤—ã—à–µ –≥–ª–∏—Å—Å–∞–¥—ã, —É–≤–µ–ª–∏—á—å—Ç–µ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å`;
    return `‚¨ÜÔ∏è –†–æ–º–±–∏–∫ —Å–≤–µ—Ä—Ö—É: —Å–∞–º–æ–ª–µ—Ç –Ω–∏–∂–µ –≥–ª–∏—Å—Å–∞–¥—ã, —É–º–µ–Ω—å—à–∏—Ç–µ –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å`;
  };

  const getWindInstruction = (direction: number, speed: number): string => {
    if (speed === 0) return "‚úÖ –í–µ—Ç—Ä–∞ –Ω–µ—Ç";
    
    const directions = ['—Å–µ–≤–µ—Ä–Ω—ã–π', '—Å–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π', '–≤–æ—Å—Ç–æ—á–Ω—ã–π', '—é–≥–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π', 
                       '—é–∂–Ω—ã–π', '—é–≥–æ-–∑–∞–ø–∞–¥–Ω—ã–π', '–∑–∞–ø–∞–¥–Ω—ã–π', '—Å–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥–Ω—ã–π'];
    const dirIndex = Math.round(direction / 45) % 8;
    
    return `üí® –í–µ—Ç–µ—Ä ${directions[dirIndex]} ${speed} —É–∑–ª–æ–≤, —É–≥–æ–ª —Å–Ω–æ—Å–∞: ${windCorrectionAngle}¬∞`;
  };

  return (
    <BuilderContainer>
      <BuilderTitle>üéÆ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ç–æ—Ä ILS</BuilderTitle>
      
      <InteractiveDemo>
        {/* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ */}
        <DemoSection>
          <SectionTitle>üéØ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏</SectionTitle>
          
          <ControlPanel>
            <div>
              <label>–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç –∫—É—Ä—Å–∞: {localizerDeviation.toFixed(1)} —Ç–æ—á–µ–∫</label>
              <input 
                type="range" 
                min="-2" 
                max="2" 
                step="0.1"
                value={localizerDeviation}
                onChange={(e) => setLocalizerDeviation(parseFloat(e.target.value))}
              />
              <Instruction>
                {getLocalizerInstruction(localizerDeviation)}
              </Instruction>
            </div>

            <div>
              <label>–û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç –≥–ª–∏—Å—Å–∞–¥—ã: {glideSlopeDeviation.toFixed(1)} —Ç–æ—á–µ–∫</label>
              <input 
                type="range" 
                min="-2" 
                max="2" 
                step="0.1"
                value={glideSlopeDeviation}
                onChange={(e) => setGlideSlopeDeviation(parseFloat(e.target.value))}
              />
              <Instruction>
                {getGlideSlopeInstruction(glideSlopeDeviation)}
              </Instruction>
            </div>

            <div>
              <label>–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–µ—Ç—Ä–∞: {windDirection}¬∞</label>
              <input 
                type="range" 
                min="0" 
                max="359" 
                step="1"
                value={windDirection}
                onChange={(e) => setWindDirection(parseInt(e.target.value))}
              />
            </div>

            <div>
              <label>–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {windSpeed} —É–∑–ª–æ–≤</label>
              <input 
                type="range" 
                min="0" 
                max="30" 
                step="1"
                value={windSpeed}
                onChange={(e) => setWindSpeed(parseInt(e.target.value))}
              />
              <Instruction>
                {getWindInstruction(windDirection, windSpeed)}
              </Instruction>
            </div>
          </ControlPanel>

          <DeviationInfo>
            <h4>üìä –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π:</h4>
            <ul>
              <li><strong>1 —Ç–æ—á–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è</strong> ‚âà 1.0¬∞ –æ—Ç –∫—É—Ä—Å–∞ / 0.35¬∞ –æ—Ç –≥–ª–∏—Å—Å–∞–¥—ã</li>
              <li><strong>–ü–æ–ª–Ω–æ–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ (2 —Ç–æ—á–∫–∏)</strong> ‚âà 2.5¬∞ –æ—Ç –∫—É—Ä—Å–∞ / 0.7¬∞ –æ—Ç –≥–ª–∏—Å—Å–∞–¥—ã</li>
              <li><strong>–†–æ–º–±–∏–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø–æ–ª–æ–∂–µ–Ω–∏–µ –í–ü–ü –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Å–∞–º–æ–ª–µ—Ç–∞</strong></li>
              <li><strong>–ü—Ä–∞–≤–∏–ª–æ:</strong> "–õ–µ—Ç–∏ –∫ —Ä–æ–º–±–∏–∫—É, –∞ –Ω–µ –æ—Ç –Ω–µ–≥–æ"</li>
            </ul>
          </DeviationInfo>
        </DemoSection>

        {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - PFD */}
        <DemoSection>
          <SectionTitle>üìä –ü—Ä–∏–±–æ—Ä–Ω–∞—è –ø–∞–Ω–µ–ª—å (PFD)</SectionTitle>
          
          <Visualization>
            <PFDDisplay>
              {/* –û—Å–Ω–æ–≤–Ω–æ–π –¥–∏—Å–ø–ª–µ–π PFD */}
              <div className="pfd-background">
                
                {/* Localizer Scale - –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–∞—è */}
                <LocalizerDisplay $deviation={localizerDeviation}>
                  <div className="scale-horizontal">
                    <div className="dots">
                      {[-2, -1, 0, 1, 2].map(pos => (
                        <div key={pos} className={`dot ${pos === 0 ? 'center' : ''}`}></div>
                      ))}
                    </div>
                    <div className="diamond" style={{ left: `calc(50% + ${localizerDeviation * 20}px)` }}>
                      <div className="diamond-shape"></div>
                    </div>
                    <div className="center-line"></div>
                  </div>
                  <div className="label">LOC</div>
                </LocalizerDisplay>

                {/* Glide Slope Scale - –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω–∞—è */}
                <GlideSlopeDisplay $deviation={glideSlopeDeviation}>
                  <div className="scale-vertical">
                    <div className="dots">
                      {[-2, -1, 0, 1, 2].map(pos => (
                        <div key={pos} className={`dot ${pos === 0 ? 'center' : ''}`}></div>
                      ))}
                    </div>
                    <div className="diamond" style={{ top: `calc(50% + ${glideSlopeDeviation * 20}px)` }}>
                      <div className="diamond-shape"></div>
                    </div>
                    <div className="center-line"></div>
                  </div>
                  <div className="label">GS</div>
                </GlideSlopeDisplay>

                {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–µ –ø–µ—Ä–µ–∫—Ä–µ—Å—Ç–∏–µ */}
                <div className="crosshair">
                  <div className="vertical-line"></div>
                  <div className="horizontal-line"></div>
                </div>

                {/* –í–µ—Ç—Ä–æ–≤–æ–π –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä */}
                <WindEffect $direction={windDirection} $strength={windSpeed}>
                  <div className="wind-info">
                    <div className="wind-arrow">‚Üë</div>
                    <div className="wind-text">{windSpeed}KT</div>
                  </div>
                </WindEffect>
              </div>
            </PFDDisplay>

            {/* –¢–µ–∫—É—â–∞—è —Å–∏—Ç—É–∞—Ü–∏—è */}
            <div className="situation-info">
              <h4>–¢–µ–∫—É—â–∞—è —Å–∏—Ç—É–∞—Ü–∏—è:</h4>
              <p>
                {localizerDeviation === 0 && glideSlopeDeviation === 0 && windSpeed === 0 
                  ? "–ò–¥–µ–∞–ª—å–Ω—ã–π –∑–∞—Ö–æ–¥! –í—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –Ω–æ—Ä–º–µ." 
                  : `
                    ${localizerDeviation !== 0 ? (localizerDeviation > 0 ? '–°–ª–µ–≤–∞ –æ—Ç –∫—É—Ä—Å–∞' : '–°–ø—Ä–∞–≤–∞ –æ—Ç –∫—É—Ä—Å–∞') : '–ù–∞ –∫—É—Ä—Å–µ'}, 
                    ${glideSlopeDeviation !== 0 ? (glideSlopeDeviation > 0 ? '–≤—ã—à–µ –≥–ª–∏—Å—Å–∞–¥—ã' : '–Ω–∏–∂–µ –≥–ª–∏—Å—Å–∞–¥—ã') : '–Ω–∞ –≥–ª–∏—Å—Å–∞–¥–µ'}
                    ${windSpeed > 0 ? `, –≤–µ—Ç–µ—Ä ${windSpeed} —É–∑–ª–æ–≤` : ''}
                  `
                }
              </p>
              {windSpeed > 0 && (
                <p><strong>–¢—Ä–µ–±—É–µ–º—ã–π —É–≥–æ–ª —Å–Ω–æ—Å–∞:</strong> {windCorrectionAngle}¬∞</p>
              )}
            </div>
          </Visualization>
        </DemoSection>
      </InteractiveDemo>
    </BuilderContainer>
  );
};